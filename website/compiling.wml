#include "$(ROOT)/.wml/template.inc" section=compiling subsection=none

<H1>Compiling</H1>

<P>This is for UNIX! A precompiled NT version of RRDtool is available from
the download area</P>

<H2>Prerequisits</H2>

<P>Before you start compiling RRDtool, make sure you have the following
packages installed on your system:</P>

<UL>
<LI><A HREF="http://www.perl.com">Perl 5.005</A></LI>
<LI><A HREF="ftp://ftp.gnu.org/gnu/make">GNU make</A></LI>
<LI><A HREF="ftp://ftp.gnu.org/gnu/gcc">GNU gcc</A></LI>
</UL>

<P>If you want to start hacking RRDtool, make sure you also have these:</P>

<UL>
<LI><A HREF="ftp://ftp.gnu.org/gnu/autoconf">GNU autoconf</A></LI>
<LI><A HREF="ftp://ftp.gnu.org/gnu/automake">GNU automake</A></LI>
<LI><A HREF="ftp://ftp.gnu.org/gnu/libtool">GNU libtool</A></LI>
</UL>

<H2>Compilation</H2>

<P>Now you are ready to compile the code:</P>

<PRE>
sh configure
make
make install
</PRE>


<P>This will configure, compile and install RRDtool in
<CODE>/usr/local/rrdtool-VERSION</CODE>.</P>

<H2>Additional Notes</H2>

<P>If you prefer to install RRDtool in some other place, use:</P>

<PRE>
sh configure --prefix=/some/other/RRDtool-dir
</PRE>

<P> If you prefer to live with shared libraries, make sure you add the
<CODE>--enable-shared</CODE> option to your configure call:</P>

<PRE>
sh configure --enable-shared
</PRE>

<P> The configure script will try to find your perl installation. If it does
not find it, you can still build RRDtool but no perl modules will be
generated.</P>

<P>By default the perl modules will be installed under the RRDtool install
directory. This will require you to use a 'use lib' statement in your
RRDtool perl programs. If you do not care what happens to your site-perl
directory, you can also use:</P>

<PRE>
make site-perl-install
</PRE>

<P> will install the perl modules whereever you keep your local perl
modules. Doing this reliefs you from using 'use lib' in your scripts. </P> 
